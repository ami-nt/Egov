
version: '3'

x-env-variables: &env-variables
  POSTGRES_USER: "postgres"
  POSTGRES_PASSWORD: "601246"
  POSTGRES_DB: "egov"
  DATABASE_URL: "postgresql://postgres:601246@host.docker.internal:5432/egov"

services:

  db:
    container_name: postgresql_db
    image: postgres
    ports:
      - 5433:5432
    environment: 
      <<: *env-variables

  backend:
    container_name: fastapi_app
    environment: 
      <<: *env-variables
    build:
      context: ./backend
    ports:
      - "8000:8000"
    command: ["./docker/app.sh"]
    depends_on:
      - db
    # volumes:
    #   - ./backend:/app

  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: zookeeper01
    ports:
      - "2181:2181"

  broker:
    image: wurstmeister/kafka:2.13-2.8.1
    container_name: broker01
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://broker:9092,OUTSIDE://broker:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
    ports:
      - "9094:9094"
    expose:
      - "9092"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    restart: always
    depends_on:
      - broker
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'broker:9092'
      KAFKA_CLUSTERS_0_ZOOKEEPER: 'zookeeper:2181'
    ports:
      - "0.0.0.0:8080:8080"
